```
def is_feasible(N, D, distances, Q, plans):
    prefix_sum = [0] * (N + 1)
    for i in range(1, N + 1):
        prefix_sum[i] = prefix_sum[i - 1] + distances[i - 1]
    
    suffix_sum = [0] * (N + 1)
    for i in range(N - 1, -1, -1):
        suffix_sum[i] = suffix_sum[i + 1] + distances[i]
    
    for i in range(Q):
        q = plans[i]
        left_distance = prefix_sum[q - 1]
        right_distance = suffix_sum[q]
        if left_distance >= D or right_distance >= D:
            print("NO")
        elif left_distance + right_distance - D >= min(left_distance, right_distance):
            print("YES")
        else:
            print("NO")

def main():
    N, D = map(int, input().split())
    distances = list(map(int, input().split()))
    Q = int(input())
    plans = list(map(int, input().split()))

    is_feasible(N, D, distances, Q, plans)

if __name__ == "__main__":
    main()
```