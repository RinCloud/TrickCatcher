Repaired code:

```python
l = list(map(int, input().split()))
l.sort()
if l[2] % 2 != 0:
  print(l[0] * l[1])
else:
  print(0)
```

Explanation:

The repaired code is almost correct, but it misses to consider the case where the number of blocks of each color can be equal. The minimum possible difference should be 0 in case there are an equal number of red and blue blocks. Therefore, we need to modify the `else` condition to handle this case as well.

Here is the updated code:

```python
l = list(map(int, input().split()))
l.sort()
if l[2] % 2 != 0:
  print(l[0] * l[1])
else:
  print(0 if l[0] == l[1] else l[0] * l[1])
```

This code now correctly calculates and prints the minimum possible difference between the number of red and blue blocks.