```cpp
#include <iostream>
#include <vector>
#include <cmath>

bool isPrime(int n) {
    if (n <= 1) {
        return false;
    }
    
    for (int i = 2; i <= std::sqrt(n); i++) {
        if (n % i == 0) {
            return false;
        }
    }
    
    return true;
}

int main() {
    int N;
    std::cin >> N;
    
    std::vector<int> x(N);
    
    for (int i = 0; i < N; i++) {
        std::cin >> x[i];
    }
    
    // Count the number of face up cards
    int count = N;
    
    // Find the maximum value of x
    int max_x = x[N - 1];
    
    // Keep track of the operations performed
    int operations = 0;
    
    // Iterate through the cards from left to right
    for (int i = 0; i < N; i++) {
        // Check if the current card is face up
        if (x[i] <= max_x) {
            count--;
            // Check if the current card is a prime number
            if (isPrime(x[i])) {
                operations++;
                
                // Flip p consecutive cards
                for (int j = i; j < i + x[i]; j++) {
                    if (j < N) {
                        x[j] = max_x + 1 - x[j];
                    }
                }
                
                // Update the maximum value of x
                if (x[i + x[i] - 1] > max_x) {
                    max_x = x[i + x[i] - 1];
                }
            }
        } else {
            break;
        }
    }
    
    std::cout << operations << std::endl;
    
    return 0;
}
```