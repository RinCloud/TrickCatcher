Here is the code to solve the problem:

```cpp
#include <iostream>
using namespace std;

int main() {
    int H, W;
    cin >> H >> W;
    char grid[H][W];
    for (int i = 0; i < H; i++) {
        for (int j = 0; j < W; j++) {
            cin >> grid[i][j];
        }
    }

    bool allWhite = true;
    bool allBlack = true;

    for (int i = 0; i < H; i++) {
        for (int j = 0; j < W; j++) {
            if (grid[i][j] == '#') {
                allWhite = false;
            } else {
                allBlack = false;
            }
        }
    }

    if (allWhite || allBlack) {
        cout << 0 << endl;
        return 0;
    }

    int complexity = 0;

    for (int i = 0; i < H; i++) {
        bool divide = false;
        for (int j = 0; j < W; j++) {
            if (grid[i][j] != grid[0][j]) {
                divide = true;
                break;
            }
        }
        if (divide) {
            complexity = max(complexity, 1);
        }
    }

    for (int j = 0; j < W; j++) {
        bool divide = false;
        for (int i = 0; i < H; i++) {
            if (grid[i][j] != grid[i][0]) {
                divide = true;
                break;
            }
        }
        if (divide) {
            complexity = max(complexity, 1);
        }
    }

    cout << complexity + 1 << endl;

    return 0;
}
```