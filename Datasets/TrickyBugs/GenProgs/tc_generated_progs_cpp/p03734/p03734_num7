// Bug:
// The code has logic flaws in selecting items. It considers only the weight of the first item and does not consider the weights of the subsequent items correctly.
  
// We also need to include the case when the total weight is less than the weight of the first item, in which case the maximum value would be 0. 

// Fixed code:

#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;
#define ll long long
vector<ll> a[4];
map<ll, ll> b;
int main(){
    ll x, y, n, m, num, sum = 0;
    scanf("%lld%lld", &n, &m);
    for(int i = 0; i < n; ++i){
        scanf("%lld%lld", &x, &y);
        if(i == 0) num = x;
        a[x-num].push_back(y);
        sum += x;
    }
    m = min(sum, m);
    b[0] = 0;
    ll num2 = (num > 1000 ? num : 1);
    for(int i = 0; i <= 3; ++i){
        for(int j = 0; j < a[i].size(); ++j){
            for(ll k = m; k >= i+num; k -= num2){
                b[k] = max(b[k], b[k-num-i]+a[i][j]);
            }
        }
    }
    cout<<b[m]<<endl;
    return 0;
}