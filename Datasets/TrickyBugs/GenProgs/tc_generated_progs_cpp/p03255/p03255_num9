```cpp
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

typedef long long ll;

int main()
{
    int N, X; cin >> N >> X;
    vector<ll> x(N);
    for (int i = 0; i < N; ++i) {
        cin >> x[i];
    }

    vector<ll> dp(N, 1ll<<60);
    dp[0] = X * x[0];
    for (int i = 1; i < N; ++i) {
        dp[i] = min(dp[i], X * x[i] + dp[i-1]);
        if (i > 1) {
            dp[i] = min(dp[i], (X + X) * (x[i] - x[i-2]) + dp[i-2]);
        }
        for (int j = 3; j <= i; ++j) {
            dp[i] = min(dp[i], (X + X) * (x[i] - x[i-j]) + dp[i-j]);
        }
    }

    cout << dp[N-1] << endl;

    return 0;
}
```
