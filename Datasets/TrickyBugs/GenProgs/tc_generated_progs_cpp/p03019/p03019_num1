**REPAIRED CODE**:
```cpp
#include<bits/stdc++.h>
using namespace std;
int n,X;
struct {
    int b,l,r;
    long long sum;
    bool operator<(const task &q)const{return sum>q.sum;}
} tasks[100005];
int main() {
    cin>>n>>X;
    long long AokiScoreSum = 0;
    for (int i = 1; i <= n; i++) {
        cin>>tasks[i].b>>tasks[i].l>>tasks[i].r;
        tasks[i].sum = 1ll*tasks[i].b*tasks[i].l+1ll*(X-tasks[i].b)*tasks[i].r;
        AokiScoreSum += 1ll*tasks[i].b*tasks[i].l;
    }
    sort(tasks+1,tasks+1+n);
    long long low = 0, high = 1ll*X*n, answer = high;
    while(low <= high) {
        long long mid = (low+high)/2ll;
        long long p = mid/X, q = mid%X;
        long long A = 0, C = 0;
        for (int i = 1; i <= p; i++) A += tasks[i].sum;
        C=A;
        if (q) {
            for (int i = 1; i <= n; i++)
                if(i <= p) C=max(C,A+(q>tasks[i].b?tasks[i].b*tasks[i].l+(q-tasks[i].b)*tasks[i].r:q*tasks[i].l)+tasks[p+1].sum-tasks[i].sum);
                else C=max(C,A+(q>tasks[i].b?tasks[i].b*tasks[i].l+(q-tasks[i].b)*tasks[i].r:q*tasks[i].l));
        }
        if (C >= AokiScoreSum) high=mid-1, answer=mid;
		else low=mid+1;
    }
    cout << answer << '\n';
}```