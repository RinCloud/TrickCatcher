// In the given code, there is a bug in the `ad()` function of the `BIT` struct. The initialization of `cnt` is missing, which causes undefined behavior when used in the function.

// To fix the bug, we need to initialize `cnt` to 0 before using it. 

// The repaired code is given below:

```
#include<bits/stdc++.h>
using namespace std;
const int N=200005,M=6000005;
int n,a[N],val[N],suf[N],pos[N][2],mx[2],mn[2][2],le[2][2];
char ans[N];
struct BIT{
	int t[N],tg[M],vl[M];
	int cnt = 0;  // Added initialization of cnt
	inline void ad(int x,int vv){
		for (;x<=n;x+=(x&(-x))){
			tg[++cnt]=x;vl[cnt]=t[x];
			t[x]=max(t[x],vv);
		}
	}
	inline int get(int x){
		int ans=-1e9;
		for (x=min(x,n);x;x-=(x&(-x)))ans=max(ans,t[x]);
		return ans;
	}
	inline void reback(int x){
		for (;cnt>x;t[tg[cnt]]=vl[cnt--]);
	}
}bit[2];
int main(){
	scanf("%d",&n);
	int cur=n+1,ptr,nq=0;
	for (int i=1;i<=n;i++){
		scanf("%d",&a[i]);
		a[i]=n+1-a[i];
		if (cur>a[i]){
			cur=a[i];
			val[i]=2;
		} 
		else val[i]=1;
	}
	memset(bit[1].t,0x8f,sizeof(bit[1].t));
	for (int i=n;i;i--)suf[i]=suf[i+1]+(val[i]==2);
	for (int i=n;i>1;i--){
		for (int j=0;j<2;j++)mx[j]=max(0,bit[j].get(a[i]));
		for (int j=0;j<2;j++){
			int x=mx[j]+val[i];
			bit[x&1].ad(a[i],x);
		}
		for (int j=0;j<2;j++)pos[i][j]=bit[j].cnt;
	}
	mn[0][0]=mn[0][1]=n+1;
	for (int i=1;i<=n;i++){
		nq^=1;
		if (i<n)
			for (int j=0;j<2;j++)bit[j].reback(pos[i+1][j]);
		for (int j=0;j<2;j++){
			for (int k=0;k<2;k++)mn[nq][k]=mn[nq^1][k],le[nq][k]=le[nq^1][k];
			if (a[i]<mn[nq^1][j]){
				mn[nq][j]=a[i];
				le[nq][j]=le[nq^1][j]+1;
			}
			ptr=i==n?(le[nq][0]==le[nq][1]):0;
			if (i<n){
				for (int k=0;k<2;k++){
					int x=le[nq][k]-le[nq][k^1]+suf[i+1];
					if (x>=0&&x<=bit[x&1].get(mn[nq][k^1])){
						ptr=1;
						break;
					}
				}
			}
			if (ptr){
				ans[i]='0'+j;
				break;
			}
		}
		if (!ans[i]){
			puts("-1");
			return 0;
		}
	}
	for (int i=1;i<=n;i++)putchar(ans[i]);
	return 0;
}
```